"""
Generate web page that can be opened on your phone and whose contents can be
copied into Notes
"""
import re
from pathlib import Path
import http.server
from jinja2 import Template
import settings as settings_module

election_departments = """
Election Central; 312-269-7870
Equipment & supplies; 773-247-4065
Polling Places; 312-269-7976
Registration; 312-269-7960
"""

output_file = Path('index.html')

settings = dict(
  (k, v) for (k, v) in settings_module.__dict__.items()
  if not k.startswith('_'))

def parse_text(text):
  name_lines = []
  number_lines = []

  lines = (l.strip() for l in text.splitlines() if l.strip())

  for line in lines:
    if line[0].isdigit():
      number_lines.append(line)
    else:
      name_lines.append(line)

  return zip(get_names(name_lines), get_numbers(number_lines))

def get_names(lines):
  for line in lines:
    # Reformat from "Smith, John A" to "John A Smith"
    parts = [n.capitalize() for n in re.split(r',?[ ]+', line.strip()) if n.strip()]
    family_name, *rest = parts
    yield ' '.join(rest + [family_name])

def get_numbers(lines):
  for line in lines:
    for part in line.split():
      yield part

def start_web_server():
  server_address = ('', 8000)
  httpd = http.server.HTTPServer(server_address, http.server.SimpleHTTPRequestHandler)
  print(f'Starting webserver at http://localhost:8000\n')
  httpd.serve_forever()


text = settings['judges'].strip()
judges = list(parse_text(text))
election_coordinator = settings.get('election_coordinator')
if election_coordinator is not None:
  election_coordinator = election_coordinator.split('; ')

other_contacts = [line.split('; ') for line in settings['other_contacts'].strip().splitlines()]

html_template = Template("""\
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Election Info</title>
</head>
<body>
<h1>Election Info</h1>

<h2>Election Judges</h2>

<ul>
{% if election_coordinator -%}
  {% set name, number = election_coordinator -%}
  <li>EC: {{ name }}&nbsp; <a href="tel:{{ number }}">{{ number }}</a></li>
{% endif -%}

{% for name, number in judges -%}
  <li>{{ name }}&nbsp; <a href="tel:{{ number }}">{{ number }}</a></li>
{% endfor %}
</ul>

<br>

<h2>Election Departments</h2>

<ul>
{% for name, number in election_departments -%}
  <li>{{ name }}&nbsp; <a href="tel:{{ number }}">{{ number }}</a></li>
{% endfor %}
</ul>

<br>

<h2>Other Contacts</h2>

<ul>
{% for name, number in other_contacts -%}
  <li>{{ name }}&nbsp; <a href="tel:{{ number }}">{{ number }}</a></li>
{% endfor %}
</ul>

<br>

<h2>Inspection text messages</h2>

<p>Preview: “{{ text_message_preview }}” </p>

<ul>
{% for name, number, mesg in text_messages %}
  <li>
    <a href="sms:{{ number }}?&body={{ mesg|urlencode }}">{{ name }}</a>
  </li>
{% endfor %}
</ul>

<br>

<p>
  <a target="_blank" href="{{ handbook_url }}">Election Judge Handbook</a>
</p>
<p>
  Generated by <a href="https://github.com/feihong/election-judge">feihong/election-judge</a>
</p>
</body>
</html>
""")

text_message_template = Template("""\
Hi {{first_name}}, this is your {{your_role}}, {{your_name}}. I plan to go to {{polling_place}} on {{inspection_date}} at {{inspection_time}} to inspect the voting equipment. Can you make it?""")

def get_text_message(first_name: str):
  config = dict(settings, first_name=first_name)
  return text_message_template.render(**config)

def get_text_messages(judges, election_coordinator):
  people = judges[:]
  if election_coordinator:
    people.insert(0, election_coordinator)

  for name, number in people:
    if not number[0].isdigit():
      continue

    mesg = get_text_message(first_name=name.split(' ', 1)[0])
    yield name, number, mesg

election_departments = [
  line.split('; ') for line in election_departments.strip().splitlines()]

with output_file.open('w') as fp:
  html = html_template.render(
    judges=judges,
    election_coordinator=election_coordinator,
    election_departments=election_departments,
    other_contacts=other_contacts,
    text_message_preview=get_text_message('Foobar'),
    text_messages=get_text_messages(judges, election_coordinator),
    handbook_url=settings['handbook_url'])
  fp.write(html)

start_web_server()
